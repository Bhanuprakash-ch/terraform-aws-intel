#!/bin/bash

# USAGE: provision/prepare-provision

state_file="${STATE_FILE:-./terraform.tfstate}"

fail() {
  echo "$*" >&2
  exit 1
}

cp -R provision.sh provision/provision.sh
(( "$?" == "0" )) ||
  fail "Could not copy the original provision.sh file to the provision folder."

assure_string_in_file() {
  assurefilename=$1
  assuresearchString=$2
  assurereplaceString=$3

  re="s#^.*$assuresearchString.*#$assurereplaceString#"

  #Detect OSX v other linux for sed ''
  if [[ "$(uname -s)" == "Darwin" ]]; then
    sed -i '' "${re}" "$assurefilename"
    (( "$?" == "0" )) ||
      fail "Could not execute execute sed command replace $assuresearchString with $assurereplaceString in file $assurefilename, terminating install."
  else
    sed -i "${re}" "$assurefilename"
    (( "$?" == "0" )) ||
      fail "Could not execute execute sed command replace $assuresearchString with $assurereplaceString in file $assurefilename, terminating install."
  fi

}

filename_provision="provision/provision.sh"
assure_string_in_file $filename_provision 'AWS_KEY_ID=${1}' "AWS_KEY_ID=\"$(terraform output -state="${state_file}" aws_access_key)\""
assure_string_in_file $filename_provision 'AWS_ACCESS_KEY=${2}' "AWS_ACCESS_KEY=\"$(terraform output -state="${state_file}" aws_secret_key)\""
assure_string_in_file $filename_provision 'REGION=${3}' "REGION=\"$(terraform output -state="${state_file}" aws_region)\""
assure_string_in_file $filename_provision 'VPC=${4}' "VPC=\"$(terraform output -state="${state_file}" aws_vpc_id)\""
assure_string_in_file $filename_provision 'BOSH_SUBNET=${5}' "BOSH_SUBNET=\"$(terraform output -state="${state_file}" bosh_subnet)\""
assure_string_in_file $filename_provision 'IPMASK=${6}' "IPMASK=\"$(terraform output -state="${state_file}" ipmask)\""
assure_string_in_file $filename_provision 'CF_IP=${7}' "CF_IP=\"$(terraform output -state="${state_file}" cf_api_id)\""
assure_string_in_file $filename_provision 'CF_SUBNET1=${8}' "CF_SUBNET1=\"$(terraform output -state="${state_file}" cf_subnet1)\""
assure_string_in_file $filename_provision 'CF_SUBNET1_AZ=${9}' "CF_SUBNET1_AZ=\"$(terraform output -state="${state_file}" cf_subnet1_az)\""
assure_string_in_file $filename_provision 'CF_SUBNET2=${10}' "CF_SUBNET2=\"$(terraform output -state="${state_file}" cf_subnet2)\""
assure_string_in_file $filename_provision 'CF_SUBNET2_AZ=${11}' "CF_SUBNET2_AZ=\"$(terraform output -state="${state_file}" cf_subnet2_az)\""
assure_string_in_file $filename_provision 'BASTION_AZ=${12}' "BASTION_AZ=\"$(terraform output -state="${state_file}" bastion_az)\""
assure_string_in_file $filename_provision 'BASTION_ID=${13}' "BASTION_ID=\"$(terraform output -state="${state_file}" bastion_id)\""
assure_string_in_file $filename_provision 'LB_SUBNET1=${14}' "LB_SUBNET1=\"$(terraform output -state="${state_file}" lb_subnet1)\""
assure_string_in_file $filename_provision 'CF_SG=${15}' "CF_SG=\"$(terraform output -state="${state_file}" cf_sg)\""
assure_string_in_file $filename_provision 'CF_ADMIN_PASS=${16}' "CF_ADMIN_PASS=\"$(terraform output -state="${state_file}" cf_admin_pass)\""
assure_string_in_file $filename_provision 'CF_DOMAIN=${17}' "CF_DOMAIN=\"$(terraform output -state="${state_file}" cf_domain)\""
assure_string_in_file $filename_provision 'CF_SIZE=${18}' "CF_SIZE=\"$(terraform output -state="${state_file}" cf_size)\""
assure_string_in_file $filename_provision 'DOCKER_SUBNET=${19}' "DOCKER_SUBNET=\"$(terraform output -state="${state_file}" docker_subnet)\""
assure_string_in_file $filename_provision 'INSTALL_DOCKER=${20}' "INSTALL_DOCKER=\"$(terraform output -state="${state_file}" install_docker_services)\""
assure_string_in_file $filename_provision 'CF_RELEASE_VERSION=${21}' "CF_RELEASE_VERSION=\"$(terraform output -state="${state_file}" cf_release_version)\""
assure_string_in_file $filename_provision 'DEBUG=${22}' "DEBUG=\"$(terraform output -state="${state_file}" debug)\""
assure_string_in_file $filename_provision 'PRIVATE_DOMAINS=${23}' "PRIVATE_DOMAINS=\"$(terraform output -state="${state_file}" private_cf_domains)\""
assure_string_in_file $filename_provision 'CF_SG_ALLOWS=${24}' "CF_SG_ALLOWS=\"$(terraform output -state="${state_file}" additional_cf_sg_allows)\""
assure_string_in_file $filename_provision 'ENV_NAME=${25}' "ENV_NAME=\"$(terraform output -state="${state_file}" env_name)\""
assure_string_in_file $filename_provision 'CONSUL_MASTERS=${26}' "CONSUL_MASTERS=\"$(terraform output -state="${state_file}" consul_masters)\""
assure_string_in_file $filename_provision 'INSTALL_LOGSEARCH=${27}' "INSTALL_LOGSEARCH=\"$(terraform output -state="${state_file}" install_logsearch)\""
assure_string_in_file $filename_provision 'LS_SUBNET1=${28}' "LS_SUBNET1=\"$(terraform output -state="${state_file}" ls_subnet1)\""
assure_string_in_file $filename_provision 'LS_SUBNET_AZ=${29}' "LS_SUBNET_AZ=\"$(terraform output -state="${state_file}" ls_subnet1_az)\""
assure_string_in_file $filename_provision 'CF_CLIENT_PASS=${30}' "CF_CLIENT_PASS=\"$(terraform output -state="${state_file}" cf_client_pass)\""
assure_string_in_file $filename_provision 'OFFLINE_JAVA_BUILDPACK=${31}' "OFFLINE_JAVA_BUILDPACK=\"$(terraform output -state="${state_file}" offline_java_buildpack)\""
assure_string_in_file $filename_provision 'CF_BOSHWORKSPACE_REPOSITORY=${32}' "CF_BOSHWORKSPACE_REPOSITORY=\"$(terraform output -state="${state_file}" cf_boshworkspace_repository)\""
assure_string_in_file $filename_provision 'CF_BOSHWORKSPACE_BRANCH=${33}' "CF_BOSHWORKSPACE_BRANCH=\"$(terraform output -state="${state_file}" cf_boshworkspace_branch)\""
assure_string_in_file $filename_provision 'DOCKER_SERVICES_BOSHWORKSPACE_REPOSITORY=${34}' "DOCKER_SERVICES_BOSHWORKSPACE_REPOSITORY=\"$(terraform output -state="${state_file}" docker_services_boshworkspace_repository)\""
assure_string_in_file $filename_provision 'DOCKER_SERVICES_BOSHWORKSPACE_BRANCH=${35}' "DOCKER_SERVICES_BOSHWORKSPACE_BRANCH=\"$(terraform output -state="${state_file}" docker_services_boshworkspace_branch)\""
assure_string_in_file $filename_provision 'LOGSEARCH_WORKSPACE_REPOSITORY=${36}' "LOGSEARCH_WORKSPACE_REPOSITORY=\"$(terraform output -state="${state_file}" logsearch_workspace_repository)\""
assure_string_in_file $filename_provision 'LOGSEARCH_WORKSPACE_BRANCH=${37}' "LOGSEARCH_WORKSPACE_BRANCH=\"$(terraform output -state="${state_file}" logsearch_workspace_branch)\""
assure_string_in_file $filename_provision 'GIT_ACCOUNT_URL=${38}' "GIT_ACCOUNT_URL=\"$(terraform output -state="${state_file}" git_account_url)\""
assure_string_in_file $filename_provision 'GH_AUTH=${39}' "GH_AUTH=\"$(terraform output -state="${state_file}" gh_auth)\""
assure_string_in_file $filename_provision 'QUAY_USERNAME=${40}' "QUAY_USERNAME=\"$(terraform output -state="${state_file}" quay_username)\""
assure_string_in_file $filename_provision 'QUAY_PASS=${41}' "QUAY_PASS=\"$(terraform output -state="${state_file}" quay_pass)\""

for job in BACKBONE API SERVICES HEALTH RUNNER; do
	for zone in Z1 Z2; do
		uc_job_name=${job}_${zone}_COUNT
		lc_job_name=$(echo $uc_job_name | tr '[:upper:]' '[:lower:]')
		assure_string_in_file $filename_provision "${uc_job_name}=COUNT" "${uc_job_name}=\"$(terraform output -state="${state_file}" ${lc_job_name})\""
	done
done
